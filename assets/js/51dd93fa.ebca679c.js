"use strict";(self.webpackChunk_ethereal_engine_docs=self.webpackChunk_ethereal_engine_docs||[]).push([[83869],{3905:(e,n,i)=>{i.d(n,{Zo:()=>u,kt:()=>m});var t=i(67294);function o(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function s(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,t)}return i}function r(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?s(Object(i),!0).forEach((function(n){o(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function l(e,n){if(null==e)return{};var i,t,o=function(e,n){if(null==e)return{};var i,t,o={},s=Object.keys(e);for(t=0;t<s.length;t++)i=s[t],n.indexOf(i)>=0||(o[i]=e[i]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)i=s[t],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var a=t.createContext({}),p=function(e){var n=t.useContext(a),i=n;return e&&(i="function"==typeof e?e(n):r(r({},n),e)),i},u=function(e){var n=p(e.components);return t.createElement(a.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var i=e.components,o=e.mdxType,s=e.originalType,a=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(i),m=o,f=d["".concat(a,".").concat(m)]||d[m]||c[m]||s;return i?t.createElement(f,r(r({ref:n},u),{},{components:i})):t.createElement(f,r({ref:n},u))}));function m(e,n){var i=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=i.length,r=new Array(s);r[0]=d;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var p=2;p<s;p++)r[p]=i[p];return t.createElement.apply(null,r)}return t.createElement.apply(null,i)}d.displayName="MDXCreateElement"},82808:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var t=i(87462),o=(i(67294),i(3905));const s={id:"physics_enums_CollisionGroups",title:"Module: physics/enums/CollisionGroups",sidebar_label:"physics/enums/CollisionGroups",sidebar_position:0,custom_edit_url:null},r=void 0,l={unversionedId:"Api/engine/modules/physics_enums_CollisionGroups",id:"Api/engine/modules/physics_enums_CollisionGroups",title:"Module: physics/enums/CollisionGroups",description:"Enumerations",source:"@site/docs/Api/engine/modules/physics_enums_CollisionGroups.md",sourceDirName:"Api/engine/modules",slug:"/Api/engine/modules/physics_enums_CollisionGroups",permalink:"/ethereal-engine-docs/docs/Api/engine/modules/physics_enums_CollisionGroups",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"physics_enums_CollisionGroups",title:"Module: physics/enums/CollisionGroups",sidebar_label:"physics/enums/CollisionGroups",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"physics/components/VelocityComponent",permalink:"/ethereal-engine-docs/docs/Api/engine/modules/physics_components_VelocityComponent"},next:{title:"physics/functions/createCollider",permalink:"/ethereal-engine-docs/docs/Api/engine/modules/physics_functions_createCollider"}},a={},p=[{value:"Enumerations",id:"enumerations",level:2},{value:"Variables",id:"variables",level:2},{value:"AvatarCollisionMask",id:"avatarcollisionmask",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"DefaultCollisionMask",id:"defaultcollisionmask",level:3},{value:"Defined in",id:"defined-in-1",level:4}],u={toc:p};function c(e){let{components:n,...i}=e;return(0,o.kt)("wrapper",(0,t.Z)({},u,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"enumerations"},"Enumerations"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/ethereal-engine-docs/docs/Api/engine/enums/physics_enums_CollisionGroups.CollisionGroups"},"CollisionGroups"))),(0,o.kt)("h2",{id:"variables"},"Variables"),(0,o.kt)("h3",{id:"avatarcollisionmask"},"AvatarCollisionMask"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,o.kt)("strong",{parentName:"p"},"AvatarCollisionMask"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"number")),(0,o.kt)("h4",{id:"defined-in"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/XRFoundation/XREngine/blob/8295036/packages/engine/src/physics/enums/CollisionGroups.ts#L12"},"packages/engine/src/physics/enums/CollisionGroups.ts:12")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"defaultcollisionmask"},"DefaultCollisionMask"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,o.kt)("strong",{parentName:"p"},"DefaultCollisionMask"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"number")),(0,o.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/XRFoundation/XREngine/blob/8295036/packages/engine/src/physics/enums/CollisionGroups.ts#L10"},"packages/engine/src/physics/enums/CollisionGroups.ts:10")))}c.isMDXComponent=!0}}]);